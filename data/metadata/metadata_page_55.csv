dc.contributor.author,dc.date.accessioned,dc.date.available,dc.identifier.uri,dc.description.abstract,dc.relation.ispartofseries,dc.title,dc.contributor.advisor,dc.identifier.oclc
"Chong, Frederic T.; Barua, Rajeev; Dahlgren, Fredrik; Kubiatowicz, John D.; Agarwal, Anant",2023-03-29T14:40:24Z,2023-03-29T14:40:24Z,https://hdl.handle.net/1721.1/149269,"The goal of this paper is to gain insight into the relative performance of communication mechanisms as bisection bandwidth and network latency vary. We compare shared memory with and without prefetching, message passing with interrupts and with polling, and bulk transfer via DMA. We present two sets of experiments involing four irregular applications on the MIT Alewife multiprocessor. First, we introduce I/O cross-traffic to vary bisection bandwidth. Second, we change processor clock speeds to vary relative network latency. We establish a framework from which to understand a range of results. On Alewife, shared memory provides good performance, even on producer-consumer applications with little data-reuse. On machines with lower bisection bandwidth and higher network latency, however, message-passing mechanisms become important. In particular, the high communication volume of shared memory threatens to become difficult to support on future machines without expensive, high-dimensional networks. Furthermore, the round-trip nature of shared memory may not be able to tolerate the latencies of future networks.",MIT-LCS-TM-562,The Sensitivity of Communication Mechanisms to Bandwidth and Latency,,
"Keidar, Idit; Khazan, Roger",2023-03-29T15:32:27Z,2023-03-29T15:32:27Z,https://hdl.handle.net/1721.1/149904,This paper presents a formal design for a novel group multicast service that provides virtually synchronous semantics in asynchronous fault-prone environments.  The design employs a client-server architecture in which group membership is maintained not by,MIT-LCS-TR-794,"A Client-Server Approach to Virtually Synchronous  Group Multicast: Specifications, Algorithms, and Proofs",,
"Isaksen, Aaron; McMillan, Leonard; Gortler, Steven J.",2023-03-29T15:31:48Z,2023-03-29T15:31:48Z,https://hdl.handle.net/1721.1/149891,,MIT-LCS-TR-778,Dynamically Reparameterized Light Fields,,
"Tennenhouse, David L.; Smith, Jonathan M.; Sincoskie, W. David; Wetherall, David J.; Minden, Gary J.",2023-03-29T14:40:13Z,2023-03-29T14:40:13Z,https://hdl.handle.net/1721.1/149265,"Active networks are a novel approach to network architecture in which the switches of the network perform customized computations on the messages flowing through them. This approach is motivated by both lead user applications, which perform user-driven computation at nodes within the network today, and the emergence of mobile code technologies that make dynamic network service innovation attainable. In this paper, we discuss two approaches to the realization of active networks and provide a snapshot of the current research issues and activities.",MIT-LCS-TM-557,A Survey of Active Network Research,,
"Shatterjee, Sandeep; Devadas, Srinivas",2023-03-29T14:41:31Z,2023-03-29T14:41:31Z,https://hdl.handle.net/1721.1/149289,"We present a system architecture and framework for creating rapidly deployable intelligent environments. The rapid pace of innovation of computer hardware and intelligent systems software leads to uncertainty that deters manufacturers from adopting a single processor, network, or software environment for placement into their products. The MASC Composable Computing infrastructure addresses these issues by providing an upgradable hardware and software infrastructure that supports rapid development and deployment, as well as simple and economical maintenance of intelligent environmental systems.",MIT-LCS-TM-596,The MASC Composable Computing Infrastructure for Intelligent Environments,,
"Engler, Dawson R.; Hsieh, Wilson C.; Kaashoek, M. Frans",2023-03-29T14:38:55Z,2023-03-29T14:38:55Z,https://hdl.handle.net/1721.1/149242,"Dynamic code generation allows specialized code sequences to be crafted using runtime information. Since this information is by definition not available statically, the use of dynamic code generation can achieve performance inherently beyond that of static code generation. Previous attempts to support dynamic code generation have been low-leveled, expensive, or machine-dependent.",MIT-LCS-TM-526,"'C: A Language for High-Level, Efficient, and Machine-independant Dynamic Code Generation",,
"Charniak, Eugene",2023-03-29T14:51:00Z,2023-03-29T14:51:00Z,https://hdl.handle.net/1721.1/149330,,MIT-LCS-TR-005,"CARPS, A Program Which Solves Calculus Word Problems","Moses, Joel",
"Vazirir, Mandana; Lynch, Nancy A.; Wing, Jeannette",2023-03-29T14:40:44Z,2023-03-29T14:40:44Z,https://hdl.handle.net/1721.1/149276,"Mos RAID controllers implemented in industry are complicated and difficult to reason about. This complexity has led to software and hardware systems that are difficult to debug and hard to modify. To overcome this problem Courtright and Gibson have developed a rapidf prototyping framework for RAID architectures which relies on a generic controller algorithm [1]. The designer of a new architecture needs to specify parts of the generic controller algorithm and must justify the validity of the controller algorithm obtained. However the latter task may be difficult due to the concurrency of operations on the disks. This is the reason why it would be useful to provide designers with an automated verification tool tailored specificially for the RAID prototyping system. As a first step towards building such a tool, our approach consists of studying several controller algorithms manually, to determine the key properties that need to be verified. This paper presents the modeling and verification of a controller algorithm for the RAID Level 5 System [5]. We model the system using I/O automata [6], give an external requirements specification, and prove that the model implements its specification. We use a key invariant to find an error in a controller algorithm for the RAID Level 6 System [5].",MIT-LCS-TM-576,Proving Correctness of a Controller Algorithm for the RAID Level 5 System,,
"Nettels, Scott; O'Toole James",2023-03-29T15:20:03Z,2023-03-29T15:20:03Z,https://hdl.handle.net/1721.1/149742,,MIT-LCS-TR-570,Implementing Orthogonal Persistence: A Simple Optimization Based on Replicating Collection,,
"Nimmer, Jeremy W.; Ernst, Michael D.",2023-03-29T15:34:25Z,2023-03-29T15:34:25Z,https://hdl.handle.net/1721.1/149926,,MIT-LCS-TR-823,Automatic Generation and Checking of Program Specifications,,
"Dornbrook, Michael; Blank, Marc",2023-03-29T15:07:34Z,2023-03-29T15:07:34Z,https://hdl.handle.net/1721.1/149570,,MIT-LCS-TR-292,The MDL Programming Language Primer,,
"Galley, S.W.; Pfister, Greg",2023-03-29T15:07:58Z,2023-03-29T15:07:58Z,https://hdl.handle.net/1721.1/149571,,MIT-LCS-TR-293,The MDL Programming Language,,19337379
"Micali, Silvio",2023-03-29T14:39:42Z,2023-03-29T14:39:42Z,https://hdl.handle.net/1721.1/149254,"We apply off-linne digital signatures to provide a novel approach to certificate revocation. Our approach dismisses with traditional CRLs and yields pubilc-key infrastructures that are several-hundred times cheaper to run than traditional ones. More generally, our technology also yields effective methods to lengthen the validity of a digital signature.",MIT-LCS-TM-542,Enhanced Certificate Revocation System,,
"Koksal, Can Emre; Kassab, Hisham; Balakrishnan, Hari",2023-03-29T15:33:08Z,2023-03-29T15:33:08Z,https://hdl.handle.net/1721.1/149911,"We investigate the problem of unfairness over short time scales in decentralized wireless media access (MAC) protocols.  Motivated by experimental results over a CSMA/CA-based WaveLAN wireless LAN that shows starvation and degraded TCP performance, we see",MIT-LCS-TR-807,An Analysis of Short-Term Fairness in Wireless Media Access Protocols,,
"Mohtashemi, Mojdeh",2023-03-29T15:32:14Z,2023-03-29T15:32:14Z,https://hdl.handle.net/1721.1/149900,,MIT-LCS-TR-787,Natural Selection and Loop Analysis,,
"Harchol-Balter, Mor; Crovella, Mark E.; Murta, Cristina D.",2023-03-29T15:31:09Z,2023-03-29T15:31:09Z,https://hdl.handle.net/1721.1/149878,We consider a distributed server system model and ask which policy should be used for assigning tasks to hosts.  In our model each host processes tasks in First-Come-First-Serve order and the task's service demand is known in advance.  We consider four ta,MIT-LCS-TR-757,On Choosing a Task Assignment Policy for a Distributed Server System,,
"Teichmann, Marek; Teller, Seth",2023-03-29T15:31:30Z,2023-03-29T15:31:30Z,https://hdl.handle.net/1721.1/149884,,MIT-LCS-TR-766,Polygonal Approximation of Voronoi Diagrams of Set of Triangles in Three Dimensions,,
