dc.contributor.author,dc.date.accessioned,dc.date.available,dc.date.issued,dc.identifier.other,dc.identifier.uri,dc.description.abstract,dc.format.extent,dc.format.mimetype,dc.language.iso,dc.relation.ispartofseries,dc.subject,dc.title
"Sullivan, Gregory T.",2004-10-08T20:37:46Z,2004-10-08T20:37:46Z,2002-03-22,AIM-2002-005,http://hdl.handle.net/1721.1/6686,"The Design Patterns book [GOF95] presents  24 time-tested patterns that consistently appear in well-designed  software systems. Each pattern is presented with a description of the  design problem the pattern addresses, as well as sample  implementation code and design considerations. This paper explores how the  patterns from the ""Gang of Four'', or ""GOF'' book, as it is often called,  appear when similar problems are addressed using a dynamic,  higher-order, object-oriented programming language. Some of the  patterns disappear -- that is, they are supported directly by language features,  some patterns are simpler or have a different focus, and some are  essentially unchanged.",45 p.; 1734113 bytes; 322829 bytes,application/postscript; application/pdf,en_US,AIM-2002-005,AI,"Advanced Programming Language Features for Executable Design Patterns ""Better Patterns Through Reflection"
"Bar-Joseph, Ziv; Keidar, Idit; Lynch, Nancy A.",2023-03-29T15:35:22Z,2023-03-29T15:35:22Z,2002-04,,https://hdl.handle.net/1721.1/149942,,,,,MIT-LCS-TR-840,,Early-Delivery Dynamic Atomic Broadcast
"Boyapati, Chandrasekhar",2023-03-29T15:35:28Z,2023-03-29T15:35:28Z,2002-04,,https://hdl.handle.net/1721.1/149944,,,,,MIT-LCS-TR-842,,Towards An Extensible Virtual Machine
"Finney, Sarah; Gardiol, Natalia H.; Kaelbling, Leslie Pack; Oates, Tim",2004-10-08T20:37:45Z,2004-10-08T20:37:45Z,2002-04-10,AIM-2002-006,http://hdl.handle.net/1721.1/6685,"Most reinforcement learning methods operate  on propositional representations of the world state. Such  representations are often intractably large and generalize poorly. Using  a deictic representation is believed to be a viable  alternative: they promise generalization while allowing the use of  existing reinforcement-learning methods. Yet, there  are few experiments on learning with deictic representations reported  in the literature. In this paper we explore the effectiveness of two  forms of deictic representation and a naive propositional  representation in a simple blocks-world domain. We find,  empirically, that the deictic representations actually worsen performance.  We conclude with a discussion of possible causes of these  results and strategies for more effective learning in domains with objects.",41 p.; 5712208 bytes; 1294450 bytes,application/postscript; application/pdf,en_US,AIM-2002-006,AI; Reinforcement Learning; Partial Observability; Representations,Learning with Deictic Representation
"Knoblich, Ulf; Freedman, David J.; Riesenhuber, Maximilian",2004-10-20T21:05:01Z,2004-10-20T21:05:01Z,2002-04-18,AIM-2002-007; CBCL-216,http://hdl.handle.net/1721.1/7270,"In a recent experiment, Freedman et al.  recorded from inferotemporal (IT) and prefrontal cortices (PFC) of monkeys  performing a ""cat/dog"" categorization task (Freedman 2001 and  Freedman, Riesenhuber, Poggio, Miller 2001). In this paper we analyze the tuning properties of view-tuned  units in our HMAX model of object recognition in cortex (Riesenhuber  1999) using the same paradigm and stimuli  as in the experiment. We then compare the simulation results to the monkey  inferotemporal neuron population data. We find that view-tuned  model IT units that were trained without any explicit category  information can show category-related tuning as observed in the  experiment. This suggests that the tuning properties of experimental IT  neurons might primarily be shaped by bottom-up stimulus-space  statistics, with little influence of top-down task-specific  information. The population of experimental PFC neurons, on the other hand,  shows tuning properties that cannot be explained just by stimulus  tuning. These analyses are compatible with a model of object recognition  in cortex (Riesenhuber 2000)  in which a population of shape-tuned  neurons provides a general basis for neurons tuned to  different recognition tasks.",11 p.; 1497623 bytes; 678374 bytes,application/postscript; application/pdf,en_US,AIM-2002-007; CBCL-216,AI; categorization IT PFC computational neuroscience model HMAX,Categorization in IT and PFC: Model and Experiments
"Gassend, Blaise; Clarke, Dwaine; van Dijk, Marten; Devadas, Srinivas",2023-03-29T15:35:07Z,2023-03-29T15:35:07Z,2002-05,,https://hdl.handle.net/1721.1/149936,,,,,MIT-LCS-TR-833,,Silicon Physical Unknown Functions and Secure Smartcards
"Ne Win, Toh; Ernst, Michael D.",2023-03-29T15:35:26Z,2023-03-29T15:35:26Z,2002-05,,https://hdl.handle.net/1721.1/149943,,,,,MIT-LCS-TR-841,,Verifying Distributed Algorithms via Dynamic Analysis and Theorem Proving
"Ma, Albert; Asanovi_, Krste",2023-03-29T15:35:33Z,2023-03-29T15:35:33Z,2002-05,,https://hdl.handle.net/1721.1/149946,,,,,MIT-LCS-TR-844,,A Double-Pulsed Set-Conditional-Reset Flip-Flop
"Steinbach, Carl",2004-10-20T20:29:42Z,2004-10-20T20:29:42Z,2002-05-01,AITR-2002-007,http://hdl.handle.net/1721.1/7093,"We describe an adaptive, mid-level approach  to the wireless device power management problem. Our approach  is based on reinforcement learning, a machine learning  framework for autonomous agents. We describe how our  framework can be applied to the power management problem in both  infrastructure and ad~hoc wireless networks. From this thesis we conclude that  mid-level power management policies can outperform low-level policies and  are more convenient to implement than high-level policies. We also  conclude that power management policies need to adapt to the  user and network, and that a mid-level power management framework  based on reinforcement learning fulfills these requirements.",41 p.; 8457203 bytes; 989455 bytes,application/postscript; application/pdf,en_US,AITR-2002-007,AI; reinforcement learning; power management; wireless networks,A Reinforcement-Learning Approach to Power Management
"Huang, Andrew ""bunnie""",2004-10-08T20:38:06Z,2004-10-08T20:38:06Z,2002-05-26,AIM-2002-008,http://hdl.handle.net/1721.1/6694,"This paper discusses the hardware foundations of the cryptosystem employed by the Xbox(TM) video game console from Microsoft. A secret boot block overlay is buried within a system ASIC. This secret boot block decrypts and verifies portions of an external FLASH-type ROM. The presence of the secret boot block is camouflaged by a decoy boot block in the external ROM. The code contained within the secret boot block is transferred to the CPU in the clear over a set of high-speed busses where it can be extracted using simple custom hardware. The paper concludes with recommendations for improving the Xbox security system. One lesson of this study is that the use of a high-performance bus alone is not a sufficient security measure, given the advent of inexpensive, fast rapid prototyping services and high-performance FPGAs.",15 p.; 837733 bytes; 527464 bytes,application/postscript; application/pdf,en_US,AIM-2002-008,AI; Tamper-resistant hardware; Microsoft Xbox; Cryptography; Privacy; Public Key Algos,Keeping Secrets in Hardware: the Microsoft Xbox(TM) Case Study
"Harder, Michael",2023-03-29T15:35:43Z,2023-03-29T15:35:43Z,2002-06,,https://hdl.handle.net/1721.1/149950,,,,,MIT-LCS-TR-848,,Improving Test Suites via Generated Specifications
"Liskov, Barbara H.; Moh, Chuang-Hue; Richman, Steven; Shrira, Liuba; Chueng, Yin; Boyapati, Chandrasekhar",2023-03-29T15:35:50Z,2023-03-29T15:35:50Z,2002-06,,https://hdl.handle.net/1721.1/149953,,,,,MIT-LCS-TR-851,,Safe Lazy Software Upgrades in Object-Oriented Databases
"Boyapati, Chandrasekhar; Lee, Robert; Rinard, Martin",2023-03-29T15:35:55Z,2023-03-29T15:35:55Z,2002-06,,https://hdl.handle.net/1721.1/149955,,,,,MIT-LCS-TR-853,,Safe Runtime Downcasts With Ownership Types
"Gassend, Blaise; Clarke, Dwaine; van Dijk, Marten; Devadas, Srinivas",2023-03-29T15:35:57Z,2023-03-29T15:35:57Z,2002-06,,https://hdl.handle.net/1721.1/149956,,,,,MIT-LCS-TR-854,,Delay-Based Circuit Authentication With Application to Key Cards
"Gassend, Blaise; Clarke, Dwaine; van Dijk, Marten; Devadas, Srinivas",2023-03-29T15:35:36Z,2023-03-29T15:35:36Z,2002-06,,https://hdl.handle.net/1721.1/149947,,,,,MIT-LCS-TR-845,,Controlled Physical Unknown Functions: Applications to Secure Smartcards and Certified Execution
"Nimmer, Jeremy",2023-03-29T15:35:52Z,2023-03-29T15:35:52Z,2002-06,,https://hdl.handle.net/1721.1/149954,,,,,MIT-LCS-TR-852,,Automatic Generation and Checking of Program Specifications
"Huang, Andrew ""bunnie""",2004-10-20T20:29:51Z,2004-10-20T20:29:51Z,2002-06-01,AITR-2002-006,http://hdl.handle.net/1721.1/7096,"The furious pace of Moore's Law is driving  computer architecture into a realm where the the speed of light is the  dominant factor in system latencies. The number of clock cycles to span  a chip are increasing, while the number of bits that can be accessed  within a clock cycle is decreasing. Hence, it is becoming more  difficult to hide latency. One alternative solution is to reduce latency by  migrating threads and data, but the overhead of existing  implementations has previously made migration an unserviceable solution so  far.  I present an architecture, implementation, and  mechanisms that reduces the overhead of migration to the point where  migration is a viable supplement to other latency hiding  mechanisms, such as multithreading. The architecture is abstract,  and presents programmers with a simple, uniform fine-grained  multithreaded parallel programming model with implicit memory management. In  other words, the spatial nature and implementation details (such as  the number of processors) of a parallel machine are entirely hidden from  the programmer. Compiler writers are  encouraged to devise programming languages for the machine that guide a  programmer to express their ideas in terms of objects, since objects exhibit  an inherent physical locality of data and code. The machine  implementation can then leverage this locality to automatically distribute  data and threads across the physical machine by using a set of  high performance migration mechanisms.  An implementation of this architecture could  migrate a null thread in 66 cycles -- over a factor of 1000 improvement  over previous work. Performance also scales well; the time  required to move a typical thread is only 4 to 5 times that of a null  thread. Data migration performance is similar, and scales  linearly with data block size. Since the performance of the migration  mechanism is on par with that of an L2 cache, the implementation  simulated in my work has no data caches and relies instead on  multithreading and the migration mechanism to hide and reduce access  latencies.",299 p.; 13404896 bytes; 2307234 bytes,application/postscript; application/pdf,en_US,AITR-2002-006,AI; HPC parallel computer architecture queues fault tolerance programmability ADAM,ADAM: A Decentralized Parallel Computer Architecture Featuring Fast Thread and Data Migration and a Uniform Hardware Abstraction
"Brown, Jeremy Hanford",2004-10-20T20:06:13Z,2004-10-20T20:06:13Z,2002-06-01,AITR-2002-005,http://hdl.handle.net/1721.1/6910,"Conventional parallel computer architectures  do not provide support for non-uniformly distributed objects. In this  thesis, I introduce sparsely faceted arrays (SFAs), a new low-level mechanism for naming regions of memory, or facets, on different  processors in a distributed, shared memory parallel  processing system. Sparsely faceted arrays address the disconnect  between the global distributed arrays provided by conventional architectures  (e.g. the Cray T3 series), and the requirements of high-level  parallel programming methods that wish to use objects that are  distributed over only a subset of processing elements. A sparsely  faceted array names a virtual globally-distributed array, but actual  facets are lazily allocated. By providing simple semantics and  making efficient use of memory, SFAs enable efficient  implementation of a variety of non-uniformly distributed data structures and  related algorithms. I present example applications which use  SFAs, and describe and evaluate simple hardware mechanisms for  implementing SFAs.  Keeping track of which nodes have allocated  facets for a particular SFA is an important task that suggests the  need for automatic memory management, including garbage collection.  To address this need, I first argue that conventional tracing  techniques such as mark/sweep and copying GC are inherently unscalable in  parallel systems. I then present a parallel memory-management  strategy, based on reference-counting, that is capable of garbage  collecting sparsely faceted arrays. I also discuss opportunities  for hardware support of this garbage collection strategy.  I have implemented a high-level hardware/OS  simulator featuring hardware support for sparsely faceted arrays  and automatic garbage collection. I describe the simulator and  outline a few of the numerous details associated with a ""real""  implementation of SFAs and SFA-aware garbage collection. Simulation  results are used throughout this thesis in the evaluation of hardware  support mechanisms.",115 p.; 3145524 bytes; 677754 bytes,application/postscript; application/pdf,en_US,AITR-2002-005,AI; sparsely faceted arrays; shared memory; garbage collection; data structures,"Sparsely Faceted Arrays: A Mechanism Supporting Parallel Allocation, Communication, and Garbage Collection"
"Kim, Adlar J.; Shelton, Christian R.",2004-10-20T21:05:02Z,2004-10-20T21:05:02Z,2002-06-01,AIM-2002-009; CBCL-217,http://hdl.handle.net/1721.1/7271,"Stock markets employ specialized traders,  market-makers, designed to provide liquidity and volume to the market by  constantly supplying both supply and demand. In this paper, we  demonstrate a novel method for modeling the market as a dynamic system  and a reinforcement learning algorithm that learns profitable  market-making strategies when run on this model.  The sequence of buys and sells for a  particular stock, the order flow, we model as an Input-Output Hidden Markov  Model fit to historical data. When combined with the dynamics of  the order book, this creates a highly non-linear and difficult dynamic  system. Our reinforcement learning algorithm, based on likelihood ratios,  is run on this partially-observable environment. We  demonstrate learning results for two separate real stocks.",7 p.; 2119856 bytes; 1370177 bytes,application/postscript; application/pdf,en_US,AIM-2002-009; CBCL-217,AI; input/output HMM; market-making; reinforcement learning; stock order flow model,Modeling Stock Order Flows and Learning Market-Making from Data
"III, Teodoro Arvizo",2004-10-20T20:29:40Z,2004-10-20T20:29:40Z,2002-06-01,AITR-2002-004,http://hdl.handle.net/1721.1/7092,"In this thesis, I designed and implemented a  virtual machine (VM) for a monomorphic  variant of Athena, a type-omega denotational  proof language (DPL). This machine  attempts to maintain the minimum state required to evaluate Athena phrases. This  thesis also includes the design and  implementation of a compiler for  monomorphic Athena that compiles to the VM.  Finally, it includes details on my  implementation of a read-eval-print loop that  glues together the VM core and the compiler  to provide a full, user-accessible  interface to monomorphic Athena. The Athena  VM provides the same basis for DPLs that the  SECD machine does for pure, functional  programming and the Warren Abstract Machine does for Prolog.",106 p.; 2935187 bytes; 816842 bytes,application/postscript; application/pdf,en_US,AITR-2002-004,AI; virtual machine; SECD; SECD machine; denotational proof language; Athena,A Virtual Machine for a Type-omega Denotational Proof Language
